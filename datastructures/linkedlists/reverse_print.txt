/*
  Insert Node at the end of a linked list 
  head pointer input could be NULL as well for empty list
  Node is defined as 
  class Node {
     int data;
     Node next;
  }
*/
    // This is a "method-only" submission. 
    // You only need to complete this method. 

void ReversePrint(Node head) {
    if (head == null) {
        return;
    }
    // Stack can also be used in place of ArrayList, but it occupies O(n) space.. 
    ArrayList<Integer> list = new ArrayList<Integer>();
    Node current = head;
    // Adding the contents of the linked list to ArrayList 
    while (current != null) {
        list.add(current.data);
        current = current.next;
    }
    
    // Reverse printing data from the ArrayList
    for (int i = list.size() - 1; i >= 0; i--) {
        System.out.println(list.get(i));
    }
}
